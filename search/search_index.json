{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Termynal","text":"<p>A lightweight and modern animated terminal window. Built for mkdocs.</p>"},{"location":"#installation","title":"Installation","text":"pip install termynalInstalled"},{"location":"#usage","title":"Usage","text":"<p>Use <code>&lt;!-- termynal --&gt;</code> before code block</p> HTMLMarkdown <p>// code</p> <pre><code>```\n// code\n```\n</code></pre>"},{"location":"#progress","title":"progress","text":"<p>progress, prompt <code>---&gt; 100%</code></p> HTMLMarkdown <p>show progressDone!</p> <pre><code>```\n$ show progress\n---&gt; 100%\nDone!\n```\n</code></pre>"},{"location":"#command","title":"command","text":"<p>command, start with <code>$</code>. You can change it with <code>prompt_literal_start</code> option.</p> HTMLMarkdown <p>pythonimport requestsrequests.get('https://exampls.com')&lt;Response [200]&gt;&gt;&gt;&gt;</p> <pre><code>```\n$ python\n&gt;&gt;&gt; import requests\n&gt;&gt;&gt; requests.get('https://exampls.com')\n&lt;Response [200]&gt;\n&gt;&gt;&gt;\n```\n</code></pre>"},{"location":"#multiline-command","title":"multiline command","text":"HTMLMarkdown <p>some longish command with \\   many \\     many \\       many \\   argumentsand this is the output</p> <pre><code>```\n&gt; some longish command with \\\n  many \\\n    many \\\n      many \\\n  arguments\nand this is the output\n```\n</code></pre>"},{"location":"#comment","title":"comment","text":"<p>comment, start with <code>#</code></p> HTMLMarkdown <p># comment</p> <pre><code>```\n# comment\n```\n</code></pre>"},{"location":"#output","title":"output","text":"<p>tool's help looks like this:</p> HTMLMarkdown <p>uv -hAn extremely fast Python package manager.Usage: uv [OPTIONS] &lt;COMMAND&gt;Commands:  run      Run a command or script  init     Create a new project  add      Add dependencies to the project  remove   Remove dependencies from the project  sync     Update the project's environment  lock     Update the project's lockfile  export   Export the project's lockfile to an alternate format  tree     Display the project's dependency tree  tool     Run and install commands provided by Python packages  python   Manage Python versions and installations  pip      Manage Python packages with a pip-compatible interface  venv     Create a virtual environment  build    Build Python packages into source distributions and wheels  publish  Upload distributions to an index  cache    Manage uv's cache  self     Manage the uv executable  version  Display uv's version  help     Display documentation for a commandCache options:  -n, --no-cache               Avoid reading from or writing to the cache, instead using a temporary directory for the duration of the operation [env: UV_NO_CACHE=]      --cache-dir &lt;CACHE_DIR&gt;  Path to the cache directory [env: UV_CACHE_DIR=]Python options:      --python-preference &lt;PYTHON_PREFERENCE&gt;  Whether to prefer uv-managed or system Python installations [env: UV_PYTHON_PREFERENCE=] [possible values: only-managed, managed, system, only-system]      --no-python-downloads                    Disable automatic downloads of Python. [env: \"UV_PYTHON_DOWNLOADS=never\"]Global options:  -q, --quiet                                      Do not print any output  -v, --verbose...                                 Use verbose output      --color &lt;COLOR_CHOICE&gt;                       Control colors in output [default: auto] [possible values: auto, always, never]      --native-tls                                 Whether to load TLS certificates from the platform's native certificate store [env: UV_NATIVE_TLS=]      --offline                                    Disable network access      --allow-insecure-host &lt;ALLOW_INSECURE_HOST&gt;  Allow insecure connections to a host [env: UV_INSECURE_HOST=]      --no-progress                                Hide all progress outputs [env: UV_NO_PROGRESS=]      --directory &lt;DIRECTORY&gt;                      Change to the given directory prior to running the command      --project &lt;PROJECT&gt;                          Run the command within the given project directory      --config-file &lt;CONFIG_FILE&gt;                  The path to a <code>uv.toml</code> file to use for configuration [env: UV_CONFIG_FILE=]      --no-config                                  Avoid discovering configuration files (<code>pyproject.toml</code>, <code>uv.toml</code>) [env: UV_NO_CONFIG=]  -h, --help                                       Display the concise help for this command  -V, --version                                    Display the uv versionUse <code>uv help</code> for more details.</p> <pre><code>```\n$ uv -h\n\n...\n```\n</code></pre>"},{"location":"#mkdocs-integration","title":"Mkdocs integration","text":"<p>Declare the plugin:</p> <pre><code>...\nplugins:\n  - termynal\n...\n</code></pre> <p>Optionally, pass options to the processor:</p> <pre><code>[...]\nplugins:\n  - termynal:\n      prompt_literal_start:\n        - \"$\"\n        - \"&gt;\"\n[...]\n</code></pre> <p>This config allows you to use another prompt:</p> HTMLMarkdown <p>command with &gt;Ok!</p> <pre><code>```\n&gt; command with &gt;\nOk!\n```\n</code></pre>"},{"location":"#credits","title":"Credits","text":"<p>Thanks ines</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#v0131-2025-09-01","title":"v0.13.1 (2025-09-01)","text":""},{"location":"changelog/#fix","title":"Fix","text":"<ul> <li>display Windows buttons in top right (#28)</li> </ul>"},{"location":"changelog/#v0130-2025-01-14","title":"v0.13.0 (2025-01-14)","text":""},{"location":"changelog/#v0123-2025-01-13","title":"v0.12.3 (2025-01-13)","text":""},{"location":"changelog/#fix_1","title":"Fix","text":"<ul> <li>change the a tag to button #26</li> </ul>"},{"location":"changelog/#v0122-2024-11-09","title":"v0.12.2 (2024-11-09)","text":""},{"location":"changelog/#v0121-2024-02-18","title":"v0.12.1 (2024-02-18)","text":""},{"location":"changelog/#refactor","title":"Refactor","text":"<ul> <li>change url</li> </ul>"},{"location":"changelog/#v0120-2024-02-16","title":"v0.12.0 (2024-02-16)","text":""},{"location":"changelog/#feat","title":"Feat","text":"<ul> <li>support spaces for content tabs</li> <li>add TERMYNAL_PREPROCESSOR_PRIORITY environment variable to control the priority of Termynal preprocessor</li> </ul>"},{"location":"changelog/#refactor_1","title":"Refactor","text":"<ul> <li>update deps and refactor code</li> </ul>"},{"location":"changelog/#v0111-2023-10-01","title":"v0.11.1 (2023-10-01)","text":""},{"location":"changelog/#fix_2","title":"Fix","text":"<ul> <li>regular expression error in FENCED_BLOCK_RE (#17)</li> </ul>"},{"location":"changelog/#v0110-2023-08-21","title":"v0.11.0 (2023-08-21)","text":""},{"location":"changelog/#feat_1","title":"Feat","text":"<ul> <li>the plugin can be configured via mkdocs.plugins</li> </ul>"},{"location":"changelog/#v0102-2023-08-20","title":"v0.10.2 (2023-08-20)","text":""},{"location":"changelog/#fix_3","title":"Fix","text":"<ul> <li>update urls</li> </ul>"},{"location":"changelog/#v0101-2023-08-16","title":"v0.10.1 (2023-08-16)","text":""},{"location":"changelog/#fix_4","title":"Fix","text":"<ul> <li>fix the plugin's css</li> </ul>"},{"location":"changelog/#v0100-2023-08-02","title":"v0.10.0 (2023-08-02)","text":""},{"location":"changelog/#feat_2","title":"Feat","text":"<ul> <li>add the windows style to the close button</li> </ul>"},{"location":"changelog/#v090-2023-08-02","title":"v0.9.0 (2023-08-02)","text":""},{"location":"changelog/#feat_3","title":"Feat","text":"<ul> <li>you can override configs for each block</li> </ul>"},{"location":"changelog/#v080-2023-08-01","title":"v0.8.0 (2023-08-01)","text":""},{"location":"changelog/#breaking-change","title":"BREAKING CHANGE","text":"<ul> <li>lang console doesn't work more, use termynal comment string in md</li> </ul>"},{"location":"changelog/#feat_4","title":"Feat","text":"<ul> <li>termynal and superfences compatibility</li> </ul>"},{"location":"changelog/#v070-2023-07-31","title":"v0.7.0 (2023-07-31)","text":""},{"location":"changelog/#feat_5","title":"Feat","text":"<ul> <li>fix multiline output, it works without animation</li> </ul>"},{"location":"changelog/#v070a1-2023-07-31","title":"v0.7.0a1 (2023-07-31)","text":""},{"location":"changelog/#fix_5","title":"Fix","text":"<ul> <li>fix typing</li> </ul>"},{"location":"changelog/#v070a0-2023-07-31","title":"v0.7.0a0 (2023-07-31)","text":""},{"location":"changelog/#feat_6","title":"Feat","text":"<ul> <li>can change a termynal title via settings</li> </ul>"},{"location":"changelog/#v060-2023-07-30","title":"v0.6.0 (2023-07-30)","text":""},{"location":"changelog/#feat_7","title":"Feat","text":"<ul> <li>set white-space to pre for span line</li> </ul>"},{"location":"changelog/#refactor_2","title":"Refactor","text":"<ul> <li>simplify code</li> <li>add type hintings</li> </ul>"},{"location":"changelog/#v050-2023-07-22","title":"v0.5.0 (2023-07-22)","text":""},{"location":"changelog/#feat_8","title":"Feat","text":"<ul> <li>fix cmd animation in multiline commands</li> </ul>"},{"location":"changelog/#v040-2023-07-06","title":"v0.4.0 (2023-07-06)","text":""},{"location":"changelog/#feat_9","title":"Feat","text":"<ul> <li>make the processor configurable to customize termynal.js behavior (#6)</li> </ul>"},{"location":"changelog/#v031-2023-06-21","title":"v0.3.1 (2023-06-21)","text":""},{"location":"changelog/#fix_6","title":"Fix","text":"<ul> <li>check content type to avoid processing errors (#5)</li> </ul>"},{"location":"changelog/#v030-2023-05-09","title":"v0.3.0 (2023-05-09)","text":""},{"location":"changelog/#feat_10","title":"Feat","text":"<ul> <li>add \"restart\" and \"faster\" button to animation in termynal</li> </ul>"},{"location":"changelog/#v022-2023-02-01","title":"v0.2.2 (2023-02-01)","text":""},{"location":"changelog/#refactor_3","title":"Refactor","text":"<ul> <li>update linters</li> </ul>"},{"location":"changelog/#v021-2020-11-17","title":"v0.2.1 - 2020-11-17","text":""},{"location":"changelog/#other","title":"Other","text":"<ul> <li>Use mkdocs ^1.4</li> </ul>"},{"location":"changelog/#v020-2020-11-17","title":"v0.2.0 - 2020-11-17","text":""},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Added <code>&lt;!-- termynal --&gt;</code></li> <li>Added <code>console</code> =&gt; <code>class=\"language-console\"</code></li> </ul>"},{"location":"changelog/#v010-2020-11-14","title":"v0.1.0 - 2020-11-14","text":"<ul> <li>init</li> </ul>"},{"location":"code-of-conduct/","title":"Code of Conduct","text":"<p>This project adheres to the Python Code of Conduct, which can be found here.</p>"},{"location":"configuration/","title":"Configuration","text":"name default title <code>\"bash\"</code> buttons <code>\"macos\"</code> <code>\"macos\"</code>, <code>\"windows\"</code> prompt_literal_start <code>[\"$\"]</code> <pre><code>plugins:\n  - termynal:\n      title: bash\n      buttons: macos\n      prompt_literal_start:\n        - \"$\"\n</code></pre> <p>You can override configurations for each block. If you set a part of the settings, the other part will be set to the default value from <code>mkdocs.yml</code>.</p> <p><code>&lt;!-- termynal: {\"prompt_literal_start\": [\"$\", \"&gt;&gt;&gt;\", \"PS &gt;\"], title: powershell, buttons: windows} --&gt;</code></p> <pre><code>```\nPS &gt; python\n&gt;&gt;&gt; import json\n```\n</code></pre> pythonimport json"},{"location":"contributing/","title":"Contributing","text":"<p>When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.</p> <p>Welcome! Happy to see you willing to make the project better.</p>"},{"location":"contributing/#getting-started","title":"Getting started","text":""},{"location":"contributing/#install","title":"Install","text":"<p>Install uv</p> <pre><code>make install-uv\n# pip install uv\n</code></pre> <ul> <li>don't forget to use the last version of uv</li> <li>don't forget to write a code for python 3.9+</li> </ul> <p>Install dependencies</p> <pre><code>make install\n</code></pre>"},{"location":"contributing/#run-tests","title":"Run tests","text":"<p>Please, write tests for your code.</p> <pre><code>make test\n</code></pre>"},{"location":"contributing/#formatting","title":"Formatting","text":"<p>Autofix code style issues.</p> <pre><code>make format\n</code></pre>"},{"location":"contributing/#lint","title":"Lint","text":"<p>Check code style issues.</p> <pre><code>make lint\n</code></pre>"},{"location":"contributing/#release","title":"Release","text":"<p>Automatically after merging with the master.</p> <ol> <li><code>make bump</code></li> <li><code>git push</code> and <code>git push --tags</code></li> </ol>"},{"location":"contributing/#commit-message-format","title":"Commit Message Format","text":"<p>This project adheres to Conventional Commits. A specification for adding human and machine readable meaning to commit messages.</p>"},{"location":"contributing/#commit-message-header","title":"Commit Message Header","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt;\n  \u2502       \u2502             \u2502\n  \u2502       \u2502             \u2514\u2500\u2af8 Summary in present tense. Not capitalized. No period at the end.\n  \u2502       \u2502\n  \u2502       \u2514\u2500\u2af8 Commit Scope\n  \u2502\n  \u2514\u2500\u2af8 Commit Type: feat|fix|build|ci|docs|perf|refactor|test|chore\n</code></pre>"},{"location":"contributing/#type","title":"Type","text":"type name description feat Features A new feature fix Bug Fixes A bug fix docs Documentation Documentation only changes style Styles Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor Code Refactoring A code change that neither fixes a bug nor adds a feature perf Performance Improvements A code change that improves performance test Tests Adding missing tests or correcting existing tests build Builds Changes that affect the build system or external dependencies (example scopes: mypy, pip, pytest) ci Continuous Integrations Changes to our CI configuration files and scripts (example scopes: Github Actions) chore Chores Other changes that don't modify src or test files revert Reverts Reverts a previous commit"}]}